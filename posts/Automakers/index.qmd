---
title: "Automaker Analysis"
author: "Brian Cervantes Alvarez"
date: "10-31-2023"
description: "Diving deep into the complex world of market competition for automakers."
format:
  html:
    toc: true
    toc-location: right
    html-math-method: katex
    page-layout: article
    code-fold: false
execute: 
  warning: false
  message: false
categories: [R, Time Series, Data Visualization]
page-layout: article
---

```{r}
library(tidyverse)
library(DataExplorer)
```

```{r}
ds <- read_csv("automakers.csv")

glimpse(ds)

ds <- ds %>% 
  mutate(class = factor(class),
         drive = factor(drive),
         fuel_type = factor(fuel_type),
         make = factor(make),
         model = factor(model),
         transmission = factor(transmission))

glimpse(ds)

names(ds)
```

```{r}
library(tidyverse)

# Read the CSV file
ds <- read_csv("automakers.csv")
```

## Data Wrangling

```{r}
## Convert class column into 2 different columns
ds <- ds %>%
  mutate(
    class_size = case_when(
      grepl("standard|minivan", class) ~ "Standard",
      grepl("small|two seater", class) ~ "Small",
      grepl("compact|subcompact|minicompact", class) ~ "Compact",
      grepl("midsize", class) ~ "Midsize",
      grepl("large|van", class) ~ "Large",
      TRUE ~ "Commercial"
    ),
    class_type = case_when(
      grepl("sport utility vehicle", class) ~ "SUV",
      grepl("station wagon", class) ~ "Station Wagon",
      grepl("pickup truck", class) ~ "Pickup Truck",
      grepl("car", class) & !grepl("minivan", class) ~ "Car",
      grepl("van", class) & !grepl("minivan", class) ~ "Van",
      grepl("two seater", class) ~ "Sports Car",
      grepl("minivan", class) ~ "Minivan",
      TRUE ~ "Commercial"
    )
  )
# Define the custom order for class_size
class_size_order <- c("Compact", "Small", "Midsize", "Standard", "Large", "Commercial")

# Update the class_size column with the custom order
ds$class_size <- factor(ds$class_size, levels = class_size_order)


ds <- ds %>%
  mutate(
    make = ifelse(str_detect(make, "^[a-zA-Z]{1,2}$"), str_to_upper(make), str_to_title(make)),
    model = str_to_title(model))


ds <- ds %>% 
  mutate(class_type = factor(class_type),
         drive = factor(drive),
         fuel_type = factor(fuel_type),
         make = factor(make),
         model = factor(model),
         transmission = factor(transmission)) %>%
  select(-class)
```

```{r}
## Split dataset "ds" into electric, diesel 
electricDs <- ds %>%
  filter(fuel_type %in% "electricity") %>%
  select(-c(fuel_type,
            cylinders,
            displacement))

dieselDs <- ds %>%
  filter(fuel_type %in% "diesel") %>%
  select(-fuel_type)

gasDs <- ds %>%
  filter(fuel_type %in% "gas") %>%
  select(-fuel_type)

```

## Check for missing values

```{r}
missing_electric <- colSums(is.na(electricDs))
missing_diesel <- colSums(is.na(dieselDs))
missing_gas <- colSums(is.na(gasDs))

#print(missing_diesel)
#print(missing_electric)
#print(missing_gas)
```

## Data Visualizations

```{r}
# Assuming your data frame is named 'gasDs'
gasDs %>%
  group_by(year, class_type) %>%
  summarise(total_num = n()) %>%
  ungroup() %>%
  ggplot(aes(x = year, y = total_num, color = class_type)) +
  geom_line(alpha = 0.9) +
  scale_x_continuous(breaks = seq(min(gasDs$year), max(gasDs$year), by = 1)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  theme_minimal()

  
```

```{r}

```
