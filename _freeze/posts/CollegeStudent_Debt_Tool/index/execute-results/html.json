{
  "hash": "d8599b925108b369fc9653e430475ad2",
  "result": {
    "markdown": "---\ntitle: \"Resources for Prospective College Students\"\nauthor: \"Brian Cervantes Alvarez, Corey Cassell\"\ndate: \"12-02-2023\"\nimage: uni.jpeg\noutput: html_document\ncode-fold: true\ncategories: [R, interactive, informative, shiny]\nruntime: shiny\n---\n\n\n\n\n![](uni.jpeg)\n\n## Purpose:\n\nHow do we inform a prospective college student about their potential career salary and student debt? We built an interactive tool to solve that problem. While simple and open to improvement, it helped us dive into the interactive visualizations using R Shiny.\n\n## Summary:\n\nThe interactive visualization has 4 parts to it. The salary, tuition, debt estimators, and debt calculator. The first one explores the majors their potential salaries. A prospective student may want to see their choices and what their salary could line up during their career. Next, the tuition estimator explores a generalized tuition cost for the students exploring their major in their state of choice. Thirdly, the debt estimator looks into your potential 4-year degree debt based on your family's income. It is an average of all the students for each university, but it still is a good indicator of how much debt a student will accumulate for their 4 years. Lastly, the final tool looks at how long a student will be in debt according to their major category of choice. In this visual, you can also see how long their projected student debts will last. In essense, this tool is another great tool to help out students in high school who are interested in going into higher education.\n\n## Shiny Interactive Tool\n\nClick this image to be transported to another world\n[![FunnyLink](student_debt.jpeg)](https://bcervantesalvarez.shinyapps.io/CollegeStudentSalaryDebtTools/)\n\nWhen quarto introduces a method of adding shiny apps into quarto, I will update this, eventually.\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Setup + Wrangling\"}\nlibrary(shiny)\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(RColorBrewer)\nlibrary(rsconnect)\nlibrary(colorspace)\nlibrary(plotly)\nlibrary(shinyWidgets)\nlibrary(scales)\nlibrary(ggplot2)\n\n#read the files in from github\nallAgesDf <- read_csv(\"all-ages.csv\")\ntuition_cost <- read_csv(\"tuition_income.csv\")\ntuition <- read_csv(\"tuition_cost.csv\")\nds4<-read_csv(\"salary_and_stats.csv\")\n\n#Wrangling Salary Potential\nsalary <- allAgesDf %>% \n  dplyr::select(Major, P25th, Median, P75th) %>% \n  pivot_longer(c(P25th, Median, P75th),\n               names_to = \"Percentile_Range\", values_to = \"Salary\") %>%\n  arrange(Major) %>%\n  mutate(Percentile_Range = as.factor(Percentile_Range),\n         Major = as.factor(Major))\n\n#Wrangling Potential Tuition Burden\n\n\ntuition_cost <- tuition_cost %>% \n  filter(year == 2018 & net_cost > 0) %>%\n  arrange(name) %>%\n  mutate(income_lvl = as.factor(income_lvl),\n         name = as.factor(name))\n  \n\ntuition_cost$income_lvl <- recode(tuition_cost$income_lvl, \n                                  \"0 to 30,000\" = \"$0 to $30,000\",\n                                  \"30,001 to 48,000\" = \"$30,001 to $48,000\",\n                                  \"48_001 to 75,000\" = \"$48,001 to $75,000\",\n                                  \"75,001 to 110,000\" = \"$75,001 to $110,000\",\n                                  \"Over 110,000\" = \"Over $110,000\")\nsalary$Percentile_Range <- factor(salary$Percentile_Range, levels = c(\"P25th\", \"Median\", \"P75th\"))\nsalary$Percentile_Range <- recode(salary$Percentile_Range, \n                                  \"P25th\" = \"Early Career\",\n                                  \"Median\" = \"Middle Career\",\n                                  \"P75th\" = \"Late Career\")\nsalary$Major <- str_to_title(salary$Major)\nsalary$Major <- gsub(\"And\", \"and\", salary$Major)\n\n\ndf <- tuition %>% \n  group_by(state, degree_length, type) %>% filter(!is.na(state) & degree_length != \"Other\") %>%\n  summarise(room_expenses = mean(room_and_board, na.rm = TRUE),\n            inStateTotal = mean(in_state_total, na.rm = TRUE),\n            outOfStateTotal = mean(out_of_state_total, na.rm = TRUE))\n\ndf$degree_length <- as.factor(df$degree_length)\ndf$type <- as.factor(df$type)\n\ndf <- df %>% rename(\"Room and Board\" = room_expenses,\n              \"In State Tuition\" = inStateTotal,\n              \"Out of State Tuition\" = outOfStateTotal)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Color Theme\"}\n#vars  \n  title = 25\n  subtitle = 20\n  facet_title = 25\n  axis_title = 18\n  tick_numbers = 13\n  title_color = \"black\"\n  background = \"gainsboro\"\n  plot_background = \"gainsboro\"\n  facet_header_background = \"gainsboro\"\n  line_type = \"solid\"\n\nCoreyPlotTheme <- theme(\n    text = element_text(family = \"Futura\"),\n    #background color of page\n    plot.background = element_rect(fill = background),\n    \n    #graph background and grid\n    panel.background = element_blank(),\n    panel.grid.major = element_line(size = .1, linetype = line_type, colour = \"gainsboro\"), \n    panel.grid.minor = element_line(size = .1, linetype = line_type, colour = \"black\"),\n    \n    #title/font/labels\n    plot.title = element_text(color = title_color, size = title,family = \"Futura\",hjust = 0.5),\n    plot.subtitle = element_text(color = title_color, size = subtitle,family = \"Futura\", hjust = 0.5),\n    #plot.caption = element_textbox_simple(halign = 0, size = tick_numbers, maxwidth = 30,family = \"Futura\"),\n    plot.caption = element_text(color = title_color, face = \"bold\", size = tick_numbers, family = \"Futura\", hjust=0),\n    strip.text = element_text(color = title_color,size = facet_title, family = \"Futura\"),\n    strip.background = element_rect(fill = facet_header_background),\n    \n    #tick marks\n    axis.text = element_text(color = title_color, size = tick_numbers, family = \"Futura\"),\n    axis.title = element_text(color = title_color, size = axis_title, family = \"Futura\"),\n    axis.ticks.x = element_blank(),\n    \n    #legend\n    legend.title = element_text(color = title_color,size =subtitle, family = \"Futura\"),\n    legend.background = element_rect(fill = plot_background),\n    legend.text = element_text(size = tick_numbers, family =\"Futura\" )\n  )\n```\n:::\n\n\n## Plot Sidebar Inputs\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Salary Estimator Selectors\"}\n#INPUT FOR PLOT 1\n\ninput1 <- inputPanel(\n  selectInput(\"selectInput1\", label = \"Choose your major:\", \n              choices = unique(salary$Major),\n              selected = \"ART HISTORY AND CRITICISM\"),\n  checkboxGroupInput(\"percentile_choice\", label = \"Pick your career level:\", \n                     choices = list(\"Early Career \" = \"Early Career\",\n                                    \"Middle Career \" = \"Middle Career\",\n                                    \"Late Career \" = \"Late Career\"),\n                     selected = c(\"Early Career\", \"Middle Career\", \"Late Career\")),\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Tuition Estimator Options\"}\n#INPUT FOR PLOT 2\n\ninput2 <- inputPanel(\n  selectInput(\"money\", label = \"Select the type of expense:\",\n              choices = c(\"Room and Board\" = \"Room and Board\",\n                          \"In State Tuition\" = \"In State Tuition\",\n                          \"Out of State Tuition\" = \"Out of State Tuition\"),\n              selected = \"In State Tuition\"),\n  selectInput(\"state\", label = \"Pick your State:\", \n              choices = unique(df$state),\n              selected = \"Oregon\"),\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Debt Estimator Levels\"}\n#INPUT FOR PLOT 3\n\ninput3 <- inputPanel(\n  selectInput(\"selectInput2\", \n              label = \"Select your university:\",\n              choices = unique(tuition_cost$name), \n              selected = \"Willamette University\"),\n  checkboxGroupInput(\"checkGroup\", \n                     label = \"Select your household income bracket:\", \n                     choices = list(\"$0 to $30,000\" = \"$0 to $30,000\",\n                                    \"$30,001 to $48,000\" = \"$30,001 to $48,000\",\n                                    \"$48,001 to $75,000\" = \"$48,001 to $75,000\",\n                                    \"$75,001 to $110,000\" = \"$75,001 to $110,000\",\n                                    \"Over $110,000\" = \"Over $110,000\"),\n                               selected = c(\"$0 to $30,000\",\n                                            \"$30,001 to $48,000\",\n                                            \"$48,001 to $75,000\",\n                                            \"$75,001 to $110,000\",\n                                            \"Over $110,000\")),\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Debt Calculator Choices\"}\n#INPUT FOR PLOT 4\n\ninput4 <- inputPanel(\n  selectInput(\"major_category\", \n              label = \"Pick a major category:\", \n              choices = unique(ds4$major_category),\n              selected = \"Computers & Mathematics\"),\n)\n```\n:::\n\n\n## Plots\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Salary Estimator\"}\n#PLOT1\nplot1 <- renderPlot({\n  salary %>% \n    filter((Major %in% input$selectInput1) & (Percentile_Range %in% input$percentile_choice)) %>% \n    ggplot(aes(x = Percentile_Range, y = Salary, fill = Percentile_Range)) +\n      geom_col(width = 0.4, color = \"black\", show.legend = FALSE) +\n      geom_label(aes(y = Salary,\n                     label = print(paste0(\"$\", round(Salary/1000, 2), \"K\"))),\n                 show.legend = FALSE,\n                 size = 7,\n                 family = \"Futura\",\n                 fill = \"white\") +\n      scale_y_continuous(labels = label_number(prefix = \"$\", suffix = \"K\", scale = 1e-3)) +\n      labs(x = NULL,\n           y = NULL,\n           title = paste0(\"Estimated Salary for \", input$selectInput1),\n           caption = \"Source: TuitionTracker.org @ 2018\") + \n      CoreyPlotTheme +\n      scale_fill_brewer(palette = \"PuBuGn\")\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Tuition Estimator\"}\n#PLOT2\nplot2 <- renderPlot({\n  df %>% filter(state == input$state) %>%\n      ggplot(aes(x = degree_length, y = .data[[input$money]], fill = degree_length)) +\n      geom_col(width = 0.4, color = \"black\", show.legend = FALSE) +\n      facet_wrap(~type) + \n      geom_label(aes(y = .data[[input$money]],\n                     label = print(paste0(\"$\", round(.data[[input$money]]/1000, 2), \"K\"))),\n                 family = \"Oswald\",\n                 size = 7,\n                 show.legend = FALSE,\n                 fill = \"white\") +\n      scale_y_continuous(labels = label_number(prefix = \"$\", suffix = \"K\", scale = 1e-3),\n                         limits = c(0,55000)) +\n      labs(x = NULL,\n           y = NULL,\n           title = paste0(\"Average \", input$money, \" for \", input$state, \" Universities\"),\n           subtitle = \"For Undergraduate Degrees\",\n           caption = \"Source: TuitionTracker.org @ 2018\") + \n      CoreyPlotTheme +\n      scale_fill_brewer(palette = \"PuBuGn\")\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Debt Estimator\"}\n#PLOT3\nplot3 <- renderPlot({\n  tuition_cost %>% \n      filter((income_lvl %in% input$checkGroup) & (name %in% input$selectInput2)) %>%\n      ggplot(aes(x = income_lvl, y = net_cost, fill = income_lvl)) +\n      geom_col(color = \"black\", width = 0.4, position = \"dodge\", show.legend = FALSE) +\n      geom_label(aes(y = net_cost,\n                     label = print(paste0(\"$\", round(net_cost/1000, 2), \"K\"))),\n                 family = \"Oswald\",\n                 size = 7,\n                 show.legend = FALSE,\n                 fill = \"white\") +\n      scale_y_continuous(labels = label_number(prefix = \"$\", suffix = \"K\", scale = 1e-3)) +\n      labs(x = NULL,\n           y = NULL,\n           title = paste0(\"Median Student Loan Debt for \", input$selectInput2),\n           subtitle = \"After Completing Their Undergraduate Degree\",\n           caption = \"Source: TuitionTracker.org @ 2018\") +\n      CoreyPlotTheme + \n      scale_fill_brewer(palette = \"PuBuGn\")\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Debt Calculator\"}\n#PlOT4\nplot4 <- renderPlot({\n  ds4 %>% \n      filter(major_category == input$major_category) %>% \n      ggplot(aes(perfect_payback_period,reorder(major, perfect_payback_period), fill = perfect_payback_period))+\n      geom_col(show.legend = FALSE) +\n      geom_label(aes(label=paste(round(perfect_payback_period,2),\" yrs.\")), \n                 show.legend = FALSE, \n                 fill = \"white\", \n                 hjust = 1.1) +\n      theme(axis.title.y = element_blank(),\n            axis.text.x = element_blank()) +\n      labs(title = 'How Long Will You Be In Debt?',\n           subtitle = \"Based on Your Major\",\n           x = 'Time to pay off loans')+\n      CoreyPlotTheme +\n      theme(plot.title = element_text(hjust = 0.5)) +\n      scale_fill_continuous_sequential(\"PuBuGn\")\n})\n```\n:::\n\n\n## Plots Don't Render, Go to Link Below\n\n[Interactive Tool](https://bcervantesalvarez.shinyapps.io/CollegeStudentSalaryDebtTools/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Salary Estimator\n#input1\n#plot1\n\n#Tuition Estimator\n#input2\n#plot2\n\n#Debt Estimator\n#input3\n#plot3\n\n#Debt Calculator\n#input4\n#plot4\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}