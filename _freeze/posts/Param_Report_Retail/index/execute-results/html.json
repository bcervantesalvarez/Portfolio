{
  "hash": "ebee4611d79f0a17223b8d2c200d19a7",
  "result": {
    "markdown": "---\ntitle: \"Got Daily Reports? Use Parameterized RMarkdown To Alliveate That Stress\"\nauthor: \"Brian Cervantes Alvarez\"\ndate: \"4-03-2023\"\nimage: report.png\nparams:\n  printcode: true\n  year: 2022\nformat:\n  html:\n    toc: true\n    toc-location: right\n    html-math-method: katex\n    page-layout: full\nexecute: \n  warning: false\n  message: false\ncategories: [R, informative, reports, plotly]\n---\n\n\n\n![](report.png)\n\n## Required Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(zoo)\nlibrary(rmarkdown)\nlibrary(purrr)\n```\n:::\n\n\n## Load Dataset\n\n::: {.cell}\n\n```{.r .cell-code}\nds <- read_csv(\"retail.csv\")\n\n#head(ds)\n\nds <- ds %>% \n  rename(ID = ...1) %>%\n  mutate(Month = lubridate::floor_date(Date, 'month')) %>%\n  filter(year(Month) == params$year)\n\nglimpse(ds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 7,601\nColumns: 9\n$ ID         <dbl> 25755, 25756, 25757, 25758, 25759, 25760, 25761, 25762, 257…\n$ DocumentID <dbl> 7227, 7230, 7231, 15494, 15494, 15494, 15494, 8610, 8611, 8…\n$ Date       <date> 2022-01-03, 2022-01-04, 2022-01-04, 2022-01-07, 2022-01-07…\n$ SKU        <dbl> 2455, 516, 2167, 2149, 1243, 1765, 475, 1777, 1786, 1785, 2…\n$ Price      <dbl> 9298.3051, 5037.2881, 9830.5085, 770.7627, 1066.1017, 612.2…\n$ Discount   <dbl> 1673.69492, 906.71186, 1769.49152, 299.23729, 413.89830, 23…\n$ Customer   <dbl> 371, 512, 406, 155, 155, 155, 155, 397, 437, 437, 447, 224,…\n$ Quantity   <dbl> 4, 4, 4, 1, 1, 1, 1, 2, 8, 4, 4, 4, 2, 1, 4, 1, 4, 2, 4, 2,…\n$ Month      <date> 2022-01-01, 2022-01-01, 2022-01-01, 2022-01-01, 2022-01-01…\n```\n:::\n:::\n\n\n## Setting Plot Theme\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyTheme <- function(){ \n    font <- \"SF Mono\"   #assign font family up front\n    \n    theme_minimal() %+replace%    #replace elements we want to change\n    \n    theme(\n      \n      #grid elements\n      panel.grid.major.x = element_blank(),    #strip major gridlines\n      panel.grid.minor = element_blank(),    #strip minor gridlines\n      axis.ticks = element_blank(),          #strip axis ticks\n      \n      #since theme_minimal() already strips axis lines, \n      #we don't need to do that again\n      \n      #text elements\n      plot.title = element_text(             #title\n                   family = font,            #set font family\n                   size = 16,                #set font size\n                   face = 'bold',            #bold typeface\n                   hjust = 0,                #left align\n                   vjust = 2),               #raise slightly\n      \n      plot.margin = margin(                  #margins\n                           r = 0.5,          #right margin\n                           l = 0.5,          #left margin\n                           t = 1,            #top margin\n                           b = 0.25,            #bottom margin\n                           unit = \"cm\"),     #units      \n      \n      plot.subtitle = element_text(          #subtitle\n                   family = font,            #font family\n                   size = 12,                #font size\n                   hjust = 0,\n                   vjust = -1),               \n      \n      plot.caption = element_text(           #caption\n                   family = font,            #font family\n                   size = 9),                 #font size\n      \n      axis.title = element_text(             #axis titles\n                   family = font,            #font family\n                   size = 10),               #font size\n      \n      axis.text = element_text(              #axis text\n                   family = font,            #axis famuly\n                   size = 9),                #font size\n      \n      axis.text.x = element_text(            #margin for axis text\n                      margin = margin(t = 5, b = 20),\n                      angle = 45)\n      \n      #since the legend often requires manual tweaking \n      #based on plot content, don't define it here\n    )\n}\n```\n:::\n\n\n\n\n## Data Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ds %>%\n  group_by(Month) %>%\n  summarize(AvgSales = round(mean(Price * Quantity),2) ) %>%\n  ggplot(aes(x = Month, \n             y = AvgSales,\n             group = 1,                 #Necessary or else line plot disappears\n             text = paste0(\"Monthly Sales: $\", (round(AvgSales/1000,2)),\"K\" ))) +\n  geom_line(size = 1) + \n  scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = \"K\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%B\") + \n  labs(title = paste0(\"CRM and Invoicing System Sales For FY: \", params$year),\n       caption = \"Source: https://www.kaggle.com/datasets/shedai/retail-data-set?select=file_out.csv\",\n       x = NULL,\n       y = NULL) +\n  myTheme()\n\nggplotly(p, tooltip = c(\"text\")) %>% \n  layout(hovermode = \"x unified\") \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-335e59be061544f4e628\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-335e59be061544f4e628\">{\"x\":{\"data\":[{\"x\":[18993,19024,19052,19083,19113,19144,19174,19205,19236,19266,19297],\"y\":[64925.2,51216.94,72485.53,66706.03,214202.63,567634.22,1758918.68,251419.27,239640.57,87622.7,112524.5],\"text\":[\"Monthly Sales: $64.93K\",\"Monthly Sales: $51.22K\",\"Monthly Sales: $72.49K\",\"Monthly Sales: $66.71K\",\"Monthly Sales: $214.2K\",\"Monthly Sales: $567.63K\",\"Monthly Sales: $1758.92K\",\"Monthly Sales: $251.42K\",\"Monthly Sales: $239.64K\",\"Monthly Sales: $87.62K\",\"Monthly Sales: $112.52K\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.77952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":90.167018039308,\"r\":18.8976377952756,\"b\":45.8321255336126,\"l\":64.3936942502362},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"title\":{\"text\":\"<b> CRM and Invoicing System Sales For FY: 2022 <\\/b>\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":21.2536322125363},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[18977.8,19312.2],\"tickmode\":\"array\",\"ticktext\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\"],\"tickvals\":[18993,19024,19052,19083,19113,19144,19174,19205,19236,19266,19297],\"categoryorder\":\"array\",\"categoryarray\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":11.9551681195517},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":13.2835201328352}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-34168.147,1844303.767],\"tickmode\":\"array\",\"ticktext\":[\"$0K\",\"$500K\",\"$1,000K\",\"$1,500K\"],\"tickvals\":[0,500000,1000000,1500000],\"categoryorder\":\"array\",\"categoryarray\":[\"$0K\",\"$500K\",\"$1,000K\",\"$1,500K\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":11.9551681195517},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":13.2835201328352}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"x unified\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"c71a44b2fbd\":{\"x\":{},\"y\":{},\"text\":{},\"type\":\"scatter\"}},\"cur_data\":\"c71a44b2fbd\",\"visdat\":{\"c71a44b2fbd\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.1/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}