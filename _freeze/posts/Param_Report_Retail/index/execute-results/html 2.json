{
  "hash": "b72b5f0a66b9124f52c8417cfae56009",
  "result": {
    "markdown": "---\ntitle: \"Retail Reports\"\nauthor: \"Brian Cervantes Alvarez\"\ndate: \"4-03-2023\"\nparams:\n  printcode: true\n  year: 2021\nformat:\n  html:\n    toc: true\n    toc-location: right\n    html-math-method: katex\n    page-layout: full\nexecute: \n  warning: false\n  message: false\ncategories: [R, informative, reports, plotly]\n---\n\n\n## Required Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(zoo)\nlibrary(rmarkdown)\nlibrary(purrr)\n```\n:::\n\n\n## Load Dataset\n\n::: {.cell}\n\n```{.r .cell-code}\nds <- read_csv(\"retail.csv\")\n\n#head(ds)\n\nds <- ds %>% \n  rename(ID = ...1) %>%\n  mutate(Month = lubridate::floor_date(Date, 'month')) %>%\n  filter(year(Month) == params$year)\n\nglimpse(ds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 6,024\nColumns: 9\n$ ID         <dbl> 19731, 19732, 19733, 19734, 19735, 19736, 19737, 19738, 197…\n$ DocumentID <dbl> 8363, 8364, 8365, 8366, 8367, 8368, 8368, 8369, 8370, 9854,…\n$ Date       <date> 2021-01-04, 2021-01-04, 2021-01-04, 2021-01-04, 2021-01-04…\n$ SKU        <dbl> 1639, 537, 160, 1538, 529, 535, 530, 501, 1801, 2329, 2329,…\n$ Price      <dbl> 309.3220, 686.4407, 341.5254, 2372.8814, 2155.9322, 1569.49…\n$ Discount   <dbl> 55.67797, 123.55932, 61.47458, 427.11864, 388.06780, 282.50…\n$ Customer   <dbl> 496, 397, 447, 131, 574, 84, 84, 36, 308, 155, 360, 150, 18…\n$ Quantity   <dbl> 1, 3, 1, 2, 8, 4, 4, 4, 4, 8, 8, 10, 8, 8, 4, 8, 1, 1, 1, 1…\n$ Month      <date> 2021-01-01, 2021-01-01, 2021-01-01, 2021-01-01, 2021-01-01…\n```\n:::\n:::\n\n\n## Setting Plot Theme\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyTheme <- function(){ \n    font <- \"SF Mono\"   #assign font family up front\n    \n    theme_minimal() %+replace%    #replace elements we want to change\n    \n    theme(\n      \n      #grid elements\n      panel.grid.major.x = element_blank(),    #strip major gridlines\n      panel.grid.minor = element_blank(),    #strip minor gridlines\n      axis.ticks = element_blank(),          #strip axis ticks\n      \n      #since theme_minimal() already strips axis lines, \n      #we don't need to do that again\n      \n      #text elements\n      plot.title = element_text(             #title\n                   family = font,            #set font family\n                   size = 16,                #set font size\n                   face = 'bold',            #bold typeface\n                   hjust = 0,                #left align\n                   vjust = 2),               #raise slightly\n      \n      plot.margin = margin(                  #margins\n                           r = 0.5,          #right margin\n                           l = 0.5,          #left margin\n                           t = 1,            #top margin\n                           b = 0.25,            #bottom margin\n                           unit = \"cm\"),     #units      \n      \n      plot.subtitle = element_text(          #subtitle\n                   family = font,            #font family\n                   size = 12,                #font size\n                   hjust = 0,\n                   vjust = -1),               \n      \n      plot.caption = element_text(           #caption\n                   family = font,            #font family\n                   size = 9),                 #font size\n      \n      axis.title = element_text(             #axis titles\n                   family = font,            #font family\n                   size = 10),               #font size\n      \n      axis.text = element_text(              #axis text\n                   family = font,            #axis famuly\n                   size = 9),                #font size\n      \n      axis.text.x = element_text(            #margin for axis text\n                      margin = margin(t = 5, b = 20),\n                      angle = 45)\n      \n      #since the legend often requires manual tweaking \n      #based on plot content, don't define it here\n    )\n}\n```\n:::\n\n\n\n\n## Data Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ds %>%\n  group_by(Month) %>%\n  summarize(AvgSales = round(mean(Price * Quantity),2) ) %>%\n  ggplot(aes(x = Month, \n             y = AvgSales,\n             group = 1,                 #Necessary or else line plot disappears\n             text = paste0(\"Monthly Sales: $\", (round(AvgSales/1000,2)),\"K\" ))) +\n  geom_line(size = 1) + \n  scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = \"K\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%B\") + \n  labs(title = paste0(\"CRM and Invoicing System Sales For FY: \", params$year),\n       caption = \"Source: https://www.kaggle.com/datasets/shedai/retail-data-set?select=file_out.csv\",\n       x = NULL,\n       y = NULL) +\n  myTheme()\n\nggplotly(p, tooltip = c(\"text\")) %>% \n  layout(hovermode = \"x unified\") \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-7e3bb7a9519b1d7e6327\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7e3bb7a9519b1d7e6327\">{\"x\":{\"data\":[{\"x\":[18628,18659,18687,18718,18748,18779,18809,18840,18871,18901,18932,18962],\"y\":[24484.03,23118.08,29839.83,15082.01,29437.33,29202.09,36241.87,25096.47,33773.88,29581.58,19335,14181.73],\"text\":[\"Monthly Sales: $24.48K\",\"Monthly Sales: $23.12K\",\"Monthly Sales: $29.84K\",\"Monthly Sales: $15.08K\",\"Monthly Sales: $29.44K\",\"Monthly Sales: $29.2K\",\"Monthly Sales: $36.24K\",\"Monthly Sales: $25.1K\",\"Monthly Sales: $33.77K\",\"Monthly Sales: $29.58K\",\"Monthly Sales: $19.34K\",\"Monthly Sales: $14.18K\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.77952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":90.167018039308,\"r\":18.8976377952756,\"b\":45.8321255336126,\"l\":46.4609420709086},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"title\":{\"text\":\"<b> CRM and Invoicing System Sales For FY: 2021 <\\/b>\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":21.2536322125363},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[18611.3,18978.7],\"tickmode\":\"array\",\"ticktext\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"tickvals\":[18628,18659,18687,18718,18748,18779,18809,18840,18871,18901,18932,18962],\"categoryorder\":\"array\",\"categoryarray\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":11.9551681195517},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":13.2835201328352}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[13078.723,37344.877],\"tickmode\":\"array\",\"ticktext\":[\"$15K\",\"$20K\",\"$25K\",\"$30K\",\"$35K\"],\"tickvals\":[15000,20000,25000,30000,35000],\"categoryorder\":\"array\",\"categoryarray\":[\"$15K\",\"$20K\",\"$25K\",\"$30K\",\"$35K\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":11.9551681195517},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"SF Mono\",\"size\":13.2835201328352}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"x unified\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"bf551fb6ee6e\":{\"x\":{},\"y\":{},\"text\":{},\"type\":\"scatter\"}},\"cur_data\":\"bf551fb6ee6e\",\"visdat\":{\"bf551fb6ee6e\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.1/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}