{
  "hash": "552b91a378d5d3256d25399cbfe970e5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Resources for Prospective College Students\"\nauthor: \n  - \"Brian Cervantes Alvarez\" \n  - \"Corey Cassell\"\ndate: \"12-02-2022\"\ndescription: \"Unleash your future with our interactive tool! Estimate salaries, tuition, and student debt for majors. Plan your journey and make informed career decisions. Essential for high school students exploring higher education.\"\nimage: uni.jpeg\nbibliography: \"bibliography.bib\"\nnocite: |\n     @*\nformat:  \n  html:\n    toc: true\n    toc-location: right\n    html-math-method: katex\n    page-layout: article\noutput: html_document\ncategories: [R, Shiny, Data Visualization, Dashboard]\n---\n\n\n![](uni.jpeg)\n\n\n## Abstract\n\nIn collaboration with Corey Cassell, this study aims to provide prospective college students with crucial information about potential income and student debt in their chosen career paths. To achieve this, we have developed an interactive tool using R Shiny to create engaging visualizations.\n\n## Introduction\n\nAs students make important decisions about their higher education, it becomes crucial to equip them with insights into the financial aspects of their chosen career paths. To address this need, we have created an interactive tool consisting of four components: salary estimator, tuition estimator, debt estimator, and debt calculator. These tools enable prospective students to explore potential salaries, estimate tuition costs, calculate degree debt, and visualize projected student debts based on their chosen majors.\n\n## Shiny Interactive Tool\n\n<iframe src=\"https://bcervantesalvarez.shinyapps.io/FinalProjectData502/\" title=\"https://bcervantesalvarez.shinyapps.io/CollegeStudentSalaryDebtTools/\" width=\"100%\" height=\"800\">\n\n</iframe>\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Setup + Wrangling\"}\nlibrary(shiny)\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(RColorBrewer)\nlibrary(rsconnect)\nlibrary(colorspace)\nlibrary(plotly)\nlibrary(shinyWidgets)\nlibrary(scales)\nlibrary(ggplot2)\n\n# read the files in from github\nallAgesDf <- read_csv(\"all-ages.csv\")\ntuition_cost <- read_csv(\"tuition_income.csv\")\ntuition <- read_csv(\"tuition_cost.csv\")\nds4 <- read_csv(\"salary_and_stats.csv\")\n\n# Wrangling Salary Potential\nsalary <- allAgesDf %>%\n    dplyr::select(Major, P25th, Median, P75th) %>%\n    pivot_longer(c(P25th, Median, P75th),\n        names_to = \"Percentile_Range\", values_to = \"Salary\"\n    ) %>%\n    arrange(Major) %>%\n    mutate(\n        Percentile_Range = as.factor(Percentile_Range),\n        Major = as.factor(Major)\n    )\n\n# Wrangling Potential Tuition Burden\n\n\ntuition_cost <- tuition_cost %>%\n    filter(year == 2018 & net_cost > 0) %>%\n    arrange(name) %>%\n    mutate(\n        income_lvl = as.factor(income_lvl),\n        name = as.factor(name)\n    )\n\n\ntuition_cost$income_lvl <- recode(tuition_cost$income_lvl,\n    \"0 to 30,000\" = \"$0 to $30,000\",\n    \"30,001 to 48,000\" = \"$30,001 to $48,000\",\n    \"48_001 to 75,000\" = \"$48,001 to $75,000\",\n    \"75,001 to 110,000\" = \"$75,001 to $110,000\",\n    \"Over 110,000\" = \"Over $110,000\"\n)\nsalary$Percentile_Range <- factor(salary$Percentile_Range, levels = c(\"P25th\", \"Median\", \"P75th\"))\nsalary$Percentile_Range <- recode(salary$Percentile_Range,\n    \"P25th\" = \"Early Career\",\n    \"Median\" = \"Middle Career\",\n    \"P75th\" = \"Late Career\"\n)\nsalary$Major <- str_to_title(salary$Major)\nsalary$Major <- gsub(\"And\", \"and\", salary$Major)\n\n\ndf <- tuition %>%\n    group_by(state, degree_length, type) %>%\n    filter(!is.na(state) & degree_length != \"Other\") %>%\n    summarise(\n        room_expenses = mean(room_and_board, na.rm = TRUE),\n        inStateTotal = mean(in_state_total, na.rm = TRUE),\n        outOfStateTotal = mean(out_of_state_total, na.rm = TRUE)\n    )\n\ndf$degree_length <- as.factor(df$degree_length)\ndf$type <- as.factor(df$type)\n\ndf <- df %>% rename(\n    \"Room and Board\" = room_expenses,\n    \"In State Tuition\" = inStateTotal,\n    \"Out of State Tuition\" = outOfStateTotal\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Color Theme\"}\n# vars\ntitle <- 25\nsubtitle <- 20\nfacet_title <- 25\naxis_title <- 18\ntick_numbers <- 13\ntitle_color <- \"black\"\nbackground <- \"gainsboro\"\nplot_background <- \"gainsboro\"\nfacet_header_background <- \"gainsboro\"\nline_type <- \"solid\"\n\nCoreyPlotTheme <- theme(\n    text = element_text(family = \"Futura\"),\n    # background color of page\n    plot.background = element_rect(fill = background),\n\n    # graph background and grid\n    panel.background = element_blank(),\n    panel.grid.major = element_line(size = .1, linetype = line_type, colour = \"gainsboro\"),\n    panel.grid.minor = element_line(size = .1, linetype = line_type, colour = \"black\"),\n\n    # title/font/labels\n    plot.title = element_text(color = title_color, size = title, family = \"Futura\", hjust = 0.5),\n    plot.subtitle = element_text(color = title_color, size = subtitle, family = \"Futura\", hjust = 0.5),\n    # plot.caption = element_textbox_simple(halign = 0, size = tick_numbers, maxwidth = 30,family = \"Futura\"),\n    plot.caption = element_text(color = title_color, face = \"bold\", size = tick_numbers, family = \"Futura\", hjust = 0),\n    strip.text = element_text(color = title_color, size = facet_title, family = \"Futura\"),\n    strip.background = element_rect(fill = facet_header_background),\n\n    # tick marks\n    axis.text = element_text(color = title_color, size = tick_numbers, family = \"Futura\"),\n    axis.title = element_text(color = title_color, size = axis_title, family = \"Futura\"),\n    axis.ticks.x = element_blank(),\n\n    # legend\n    legend.title = element_text(color = title_color, size = subtitle, family = \"Futura\"),\n    legend.background = element_rect(fill = plot_background),\n    legend.text = element_text(size = tick_numbers, family = \"Futura\")\n)\n```\n:::\n\n\n## Plot Sidebar Inputs\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Salary Estimator Selectors\"}\n# INPUT FOR PLOT 1\n\ninput1 <- inputPanel(\n    selectInput(\"selectInput1\",\n        label = \"Choose your major:\",\n        choices = unique(salary$Major),\n        selected = \"ART HISTORY AND CRITICISM\"\n    ),\n    checkboxGroupInput(\"percentile_choice\",\n        label = \"Pick your career level:\",\n        choices = list(\n            \"Early Career \" = \"Early Career\",\n            \"Middle Career \" = \"Middle Career\",\n            \"Late Career \" = \"Late Career\"\n        ),\n        selected = c(\"Early Career\", \"Middle Career\", \"Late Career\")\n    ),\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Tuition Estimator Options\"}\n# INPUT FOR PLOT 2\n\ninput2 <- inputPanel(\n    selectInput(\"money\",\n        label = \"Select the type of expense:\",\n        choices = c(\n            \"Room and Board\" = \"Room and Board\",\n            \"In State Tuition\" = \"In State Tuition\",\n            \"Out of State Tuition\" = \"Out of State Tuition\"\n        ),\n        selected = \"In State Tuition\"\n    ),\n    selectInput(\"state\",\n        label = \"Pick your State:\",\n        choices = unique(df$state),\n        selected = \"Oregon\"\n    ),\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Debt Estimator Levels\"}\n# INPUT FOR PLOT 3\n\ninput3 <- inputPanel(\n    selectInput(\"selectInput2\",\n        label = \"Select your university:\",\n        choices = unique(tuition_cost$name),\n        selected = \"Willamette University\"\n    ),\n    checkboxGroupInput(\"checkGroup\",\n        label = \"Select your household income bracket:\",\n        choices = list(\n            \"$0 to $30,000\" = \"$0 to $30,000\",\n            \"$30,001 to $48,000\" = \"$30,001 to $48,000\",\n            \"$48,001 to $75,000\" = \"$48,001 to $75,000\",\n            \"$75,001 to $110,000\" = \"$75,001 to $110,000\",\n            \"Over $110,000\" = \"Over $110,000\"\n        ),\n        selected = c(\n            \"$0 to $30,000\",\n            \"$30,001 to $48,000\",\n            \"$48,001 to $75,000\",\n            \"$75,001 to $110,000\",\n            \"Over $110,000\"\n        )\n    ),\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Debt Calculator Choices\"}\n# INPUT FOR PLOT 4\n\ninput4 <- inputPanel(\n    selectInput(\"major_category\",\n        label = \"Pick a major category:\",\n        choices = unique(ds4$major_category),\n        selected = \"Computers & Mathematics\"\n    ),\n)\n```\n:::\n\n\n## Plots\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Salary Estimator\"}\n# PLOT1\nplot1 <- renderPlot({\n    salary %>%\n        filter((Major %in% input$selectInput1) & (Percentile_Range %in% input$percentile_choice)) %>%\n        ggplot(aes(x = Percentile_Range, y = Salary, fill = Percentile_Range)) +\n        geom_col(width = 0.4, color = \"black\", show.legend = FALSE) +\n        geom_label(\n            aes(\n                y = Salary,\n                label = print(paste0(\"$\", round(Salary / 1000, 2), \"K\"))\n            ),\n            show.legend = FALSE,\n            size = 7,\n            family = \"Futura\",\n            fill = \"white\"\n        ) +\n        scale_y_continuous(labels = label_number(prefix = \"$\", suffix = \"K\", scale = 1e-3)) +\n        labs(\n            x = NULL,\n            y = NULL,\n            title = paste0(\"Estimated Salary for \", input$selectInput1),\n            caption = \"Source: TuitionTracker.org @ 2018\"\n        ) +\n        CoreyPlotTheme +\n        scale_fill_brewer(palette = \"PuBuGn\")\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Tuition Estimator\"}\n# PLOT2\nplot2 <- renderPlot({\n    df %>%\n        filter(state == input$state) %>%\n        ggplot(aes(x = degree_length, y = .data[[input$money]], fill = degree_length)) +\n        geom_col(width = 0.4, color = \"black\", show.legend = FALSE) +\n        facet_wrap(~type) +\n        geom_label(\n            aes(\n                y = .data[[input$money]],\n                label = print(paste0(\"$\", round(.data[[input$money]] / 1000, 2), \"K\"))\n            ),\n            family = \"Oswald\",\n            size = 7,\n            show.legend = FALSE,\n            fill = \"white\"\n        ) +\n        scale_y_continuous(\n            labels = label_number(prefix = \"$\", suffix = \"K\", scale = 1e-3),\n            limits = c(0, 55000)\n        ) +\n        labs(\n            x = NULL,\n            y = NULL,\n            title = paste0(\"Average \", input$money, \" for \", input$state, \" Universities\"),\n            subtitle = \"For Undergraduate Degrees\",\n            caption = \"Source: TuitionTracker.org @ 2018\"\n        ) +\n        CoreyPlotTheme +\n        scale_fill_brewer(palette = \"PuBuGn\")\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Debt Estimator\"}\n# PLOT3\nplot3 <- renderPlot({\n    tuition_cost %>%\n        filter((income_lvl %in% input$checkGroup) & (name %in% input$selectInput2)) %>%\n        ggplot(aes(x = income_lvl, y = net_cost, fill = income_lvl)) +\n        geom_col(color = \"black\", width = 0.4, position = \"dodge\", show.legend = FALSE) +\n        geom_label(\n            aes(\n                y = net_cost,\n                label = print(paste0(\"$\", round(net_cost / 1000, 2), \"K\"))\n            ),\n            family = \"Oswald\",\n            size = 7,\n            show.legend = FALSE,\n            fill = \"white\"\n        ) +\n        scale_y_continuous(labels = label_number(prefix = \"$\", suffix = \"K\", scale = 1e-3)) +\n        labs(\n            x = NULL,\n            y = NULL,\n            title = paste0(\"Median Student Loan Debt for \", input$selectInput2),\n            subtitle = \"After Completing Their Undergraduate Degree\",\n            caption = \"Source: TuitionTracker.org @ 2018\"\n        ) +\n        CoreyPlotTheme +\n        scale_fill_brewer(palette = \"PuBuGn\")\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Debt Calculator\"}\n# PlOT4\nplot4 <- renderPlot({\n    ds4 %>%\n        filter(major_category == input$major_category) %>%\n        ggplot(aes(perfect_payback_period, reorder(major, perfect_payback_period), fill = perfect_payback_period)) +\n        geom_col(show.legend = FALSE) +\n        geom_label(aes(label = paste(round(perfect_payback_period, 2), \" yrs.\")),\n            show.legend = FALSE,\n            fill = \"white\",\n            hjust = 1.1\n        ) +\n        theme(\n            axis.title.y = element_blank(),\n            axis.text.x = element_blank()\n        ) +\n        labs(\n            title = \"How Long Will You Be In Debt?\",\n            subtitle = \"Based on Your Major\",\n            x = \"Time to pay off loans\"\n        ) +\n        CoreyPlotTheme +\n        theme(plot.title = element_text(hjust = 0.5)) +\n        scale_fill_continuous_sequential(\"PuBuGn\")\n})\n```\n:::\n\n\n\n## Conclusion\n\nThrough the collaboration with Corey Cassell, our interactive tool provides valuable resources for high school students considering higher education. By offering comprehensive tools for estimating salaries, tuition costs, and student debt accumulation, we empower students to make informed decisions about their future. This project showcases the power of interactive visualizations in providing crucial information to prospective college students, guiding them towards successful career paths and financial planning.\n\n## Data References\n\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}